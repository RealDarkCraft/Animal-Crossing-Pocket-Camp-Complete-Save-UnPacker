# automatically generated by the FlatBuffers compiler, do not modify

# namespace: Acpcc

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class UserFurniturePuzzleProgressSetElement(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = UserFurniturePuzzleProgressSetElement()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsUserFurniturePuzzleProgressSetElement(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # UserFurniturePuzzleProgressSetElement
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # UserFurniturePuzzleProgressSetElement
    def LessonId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # UserFurniturePuzzleProgressSetElement
    def MedalNum(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # UserFurniturePuzzleProgressSetElement
    def NewState(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint8Flags, o + self._tab.Pos)
        return 0

    # UserFurniturePuzzleProgressSetElement
    def MaxScore(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

def UserFurniturePuzzleProgressSetElementStart(builder):
    builder.StartObject(4)

def Start(builder):
    UserFurniturePuzzleProgressSetElementStart(builder)

def UserFurniturePuzzleProgressSetElementAddLessonId(builder, lessonId):
    builder.PrependUint32Slot(0, lessonId, 0)

def AddLessonId(builder, lessonId):
    UserFurniturePuzzleProgressSetElementAddLessonId(builder, lessonId)

def UserFurniturePuzzleProgressSetElementAddMedalNum(builder, medalNum):
    builder.PrependInt32Slot(1, medalNum, 0)

def AddMedalNum(builder, medalNum):
    UserFurniturePuzzleProgressSetElementAddMedalNum(builder, medalNum)

def UserFurniturePuzzleProgressSetElementAddNewState(builder, newState):
    builder.PrependUint8Slot(2, newState, 0)

def AddNewState(builder, newState):
    UserFurniturePuzzleProgressSetElementAddNewState(builder, newState)

def UserFurniturePuzzleProgressSetElementAddMaxScore(builder, maxScore):
    builder.PrependInt32Slot(3, maxScore, 0)

def AddMaxScore(builder, maxScore):
    UserFurniturePuzzleProgressSetElementAddMaxScore(builder, maxScore)

def UserFurniturePuzzleProgressSetElementEnd(builder):
    return builder.EndObject()

def End(builder):
    return UserFurniturePuzzleProgressSetElementEnd(builder)
