# automatically generated by the FlatBuffers compiler, do not modify

# namespace: Acpcc

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class UserFriendSpot(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = UserFriendSpot()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsUserFriendSpot(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # UserFriendSpot
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # UserFriendSpot
    def Id(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # UserFriendSpot
    def CheckBitFlag(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint8Flags, o + self._tab.Pos)
        return 0

    # UserFriendSpot
    def MineCheckAt(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # UserFriendSpot
    def MineFriendHelpList(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.String(a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 4))
        return ""

    # UserFriendSpot
    def MineFriendHelpListLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # UserFriendSpot
    def MineFriendHelpListIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        return o == 0

    # UserFriendSpot
    def GardenEventCheckAt(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # UserFriendSpot
    def GardenEventFriendHelpList(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.String(a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 4))
        return ""

    # UserFriendSpot
    def GardenEventFriendHelpListLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # UserFriendSpot
    def GardenEventFriendHelpListIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        return o == 0

    # UserFriendSpot
    def GardenCampaignId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # UserFriendSpot
    def GardenAnimalCountList(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(18))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.Get(flatbuffers.number_types.Int32Flags, a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 4))
        return 0

    # UserFriendSpot
    def GardenAnimalCountListAsNumpy(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(18))
        if o != 0:
            return self._tab.GetVectorAsNumpy(flatbuffers.number_types.Int32Flags, o)
        return 0

    # UserFriendSpot
    def GardenAnimalCountListLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(18))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # UserFriendSpot
    def GardenAnimalCountListIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(18))
        return o == 0

    # UserFriendSpot
    def GifteventLimitedDelivered(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(20))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # UserFriendSpot
    def GifteventFriendList(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(22))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.String(a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 4))
        return ""

    # UserFriendSpot
    def GifteventFriendListLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(22))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # UserFriendSpot
    def GifteventFriendListIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(22))
        return o == 0

    # UserFriendSpot
    def GifteventItemStartPosList(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(24))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.Get(flatbuffers.number_types.Int32Flags, a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 4))
        return 0

    # UserFriendSpot
    def GifteventItemStartPosListAsNumpy(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(24))
        if o != 0:
            return self._tab.GetVectorAsNumpy(flatbuffers.number_types.Int32Flags, o)
        return 0

    # UserFriendSpot
    def GifteventItemStartPosListLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(24))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # UserFriendSpot
    def GifteventItemStartPosListIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(24))
        return o == 0

    # UserFriendSpot
    def GifteventItemInfoList(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(26))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.String(a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 4))
        return ""

    # UserFriendSpot
    def GifteventItemInfoListLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(26))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # UserFriendSpot
    def GifteventItemInfoListIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(26))
        return o == 0

    # UserFriendSpot
    def PlaceFriendList(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(28))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.String(a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 4))
        return ""

    # UserFriendSpot
    def PlaceFriendListLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(28))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # UserFriendSpot
    def PlaceFriendListIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(28))
        return o == 0

    # UserFriendSpot
    def HighPrioPlaceFriendList(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(30))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.String(a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 4))
        return ""

    # UserFriendSpot
    def HighPrioPlaceFriendListLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(30))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # UserFriendSpot
    def HighPrioPlaceFriendListIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(30))
        return o == 0

    # UserFriendSpot
    def PlaceNormalIndex(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(32))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint8Flags, o + self._tab.Pos)
        return 0

    # UserFriendSpot
    def PlaceLiveIndex(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(34))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint8Flags, o + self._tab.Pos)
        return 0

    # UserFriendSpot
    def PlacePartnerIdList(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(36))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 4))
        return 0

    # UserFriendSpot
    def PlacePartnerIdListAsNumpy(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(36))
        if o != 0:
            return self._tab.GetVectorAsNumpy(flatbuffers.number_types.Uint32Flags, o)
        return 0

    # UserFriendSpot
    def PlacePartnerIdListLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(36))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # UserFriendSpot
    def PlacePartnerIdListIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(36))
        return o == 0

def UserFriendSpotStart(builder):
    builder.StartObject(17)

def Start(builder):
    UserFriendSpotStart(builder)

def UserFriendSpotAddId(builder, id):
    builder.PrependUint32Slot(0, id, 0)

def AddId(builder, id):
    UserFriendSpotAddId(builder, id)

def UserFriendSpotAddCheckBitFlag(builder, checkBitFlag):
    builder.PrependUint8Slot(1, checkBitFlag, 0)

def AddCheckBitFlag(builder, checkBitFlag):
    UserFriendSpotAddCheckBitFlag(builder, checkBitFlag)

def UserFriendSpotAddMineCheckAt(builder, mineCheckAt):
    builder.PrependInt64Slot(2, mineCheckAt, 0)

def AddMineCheckAt(builder, mineCheckAt):
    UserFriendSpotAddMineCheckAt(builder, mineCheckAt)

def UserFriendSpotAddMineFriendHelpList(builder, mineFriendHelpList):
    builder.PrependUOffsetTRelativeSlot(3, flatbuffers.number_types.UOffsetTFlags.py_type(mineFriendHelpList), 0)

def AddMineFriendHelpList(builder, mineFriendHelpList):
    UserFriendSpotAddMineFriendHelpList(builder, mineFriendHelpList)

def UserFriendSpotStartMineFriendHelpListVector(builder, numElems):
    return builder.StartVector(4, numElems, 4)

def StartMineFriendHelpListVector(builder, numElems):
    return UserFriendSpotStartMineFriendHelpListVector(builder, numElems)

def UserFriendSpotAddGardenEventCheckAt(builder, gardenEventCheckAt):
    builder.PrependInt64Slot(4, gardenEventCheckAt, 0)

def AddGardenEventCheckAt(builder, gardenEventCheckAt):
    UserFriendSpotAddGardenEventCheckAt(builder, gardenEventCheckAt)

def UserFriendSpotAddGardenEventFriendHelpList(builder, gardenEventFriendHelpList):
    builder.PrependUOffsetTRelativeSlot(5, flatbuffers.number_types.UOffsetTFlags.py_type(gardenEventFriendHelpList), 0)

def AddGardenEventFriendHelpList(builder, gardenEventFriendHelpList):
    UserFriendSpotAddGardenEventFriendHelpList(builder, gardenEventFriendHelpList)

def UserFriendSpotStartGardenEventFriendHelpListVector(builder, numElems):
    return builder.StartVector(4, numElems, 4)

def StartGardenEventFriendHelpListVector(builder, numElems):
    return UserFriendSpotStartGardenEventFriendHelpListVector(builder, numElems)

def UserFriendSpotAddGardenCampaignId(builder, gardenCampaignId):
    builder.PrependUint32Slot(6, gardenCampaignId, 0)

def AddGardenCampaignId(builder, gardenCampaignId):
    UserFriendSpotAddGardenCampaignId(builder, gardenCampaignId)

def UserFriendSpotAddGardenAnimalCountList(builder, gardenAnimalCountList):
    builder.PrependUOffsetTRelativeSlot(7, flatbuffers.number_types.UOffsetTFlags.py_type(gardenAnimalCountList), 0)

def AddGardenAnimalCountList(builder, gardenAnimalCountList):
    UserFriendSpotAddGardenAnimalCountList(builder, gardenAnimalCountList)

def UserFriendSpotStartGardenAnimalCountListVector(builder, numElems):
    return builder.StartVector(4, numElems, 4)

def StartGardenAnimalCountListVector(builder, numElems):
    return UserFriendSpotStartGardenAnimalCountListVector(builder, numElems)

def UserFriendSpotAddGifteventLimitedDelivered(builder, gifteventLimitedDelivered):
    builder.PrependBoolSlot(8, gifteventLimitedDelivered, 0)

def AddGifteventLimitedDelivered(builder, gifteventLimitedDelivered):
    UserFriendSpotAddGifteventLimitedDelivered(builder, gifteventLimitedDelivered)

def UserFriendSpotAddGifteventFriendList(builder, gifteventFriendList):
    builder.PrependUOffsetTRelativeSlot(9, flatbuffers.number_types.UOffsetTFlags.py_type(gifteventFriendList), 0)

def AddGifteventFriendList(builder, gifteventFriendList):
    UserFriendSpotAddGifteventFriendList(builder, gifteventFriendList)

def UserFriendSpotStartGifteventFriendListVector(builder, numElems):
    return builder.StartVector(4, numElems, 4)

def StartGifteventFriendListVector(builder, numElems):
    return UserFriendSpotStartGifteventFriendListVector(builder, numElems)

def UserFriendSpotAddGifteventItemStartPosList(builder, gifteventItemStartPosList):
    builder.PrependUOffsetTRelativeSlot(10, flatbuffers.number_types.UOffsetTFlags.py_type(gifteventItemStartPosList), 0)

def AddGifteventItemStartPosList(builder, gifteventItemStartPosList):
    UserFriendSpotAddGifteventItemStartPosList(builder, gifteventItemStartPosList)

def UserFriendSpotStartGifteventItemStartPosListVector(builder, numElems):
    return builder.StartVector(4, numElems, 4)

def StartGifteventItemStartPosListVector(builder, numElems):
    return UserFriendSpotStartGifteventItemStartPosListVector(builder, numElems)

def UserFriendSpotAddGifteventItemInfoList(builder, gifteventItemInfoList):
    builder.PrependUOffsetTRelativeSlot(11, flatbuffers.number_types.UOffsetTFlags.py_type(gifteventItemInfoList), 0)

def AddGifteventItemInfoList(builder, gifteventItemInfoList):
    UserFriendSpotAddGifteventItemInfoList(builder, gifteventItemInfoList)

def UserFriendSpotStartGifteventItemInfoListVector(builder, numElems):
    return builder.StartVector(4, numElems, 4)

def StartGifteventItemInfoListVector(builder, numElems):
    return UserFriendSpotStartGifteventItemInfoListVector(builder, numElems)

def UserFriendSpotAddPlaceFriendList(builder, placeFriendList):
    builder.PrependUOffsetTRelativeSlot(12, flatbuffers.number_types.UOffsetTFlags.py_type(placeFriendList), 0)

def AddPlaceFriendList(builder, placeFriendList):
    UserFriendSpotAddPlaceFriendList(builder, placeFriendList)

def UserFriendSpotStartPlaceFriendListVector(builder, numElems):
    return builder.StartVector(4, numElems, 4)

def StartPlaceFriendListVector(builder, numElems):
    return UserFriendSpotStartPlaceFriendListVector(builder, numElems)

def UserFriendSpotAddHighPrioPlaceFriendList(builder, highPrioPlaceFriendList):
    builder.PrependUOffsetTRelativeSlot(13, flatbuffers.number_types.UOffsetTFlags.py_type(highPrioPlaceFriendList), 0)

def AddHighPrioPlaceFriendList(builder, highPrioPlaceFriendList):
    UserFriendSpotAddHighPrioPlaceFriendList(builder, highPrioPlaceFriendList)

def UserFriendSpotStartHighPrioPlaceFriendListVector(builder, numElems):
    return builder.StartVector(4, numElems, 4)

def StartHighPrioPlaceFriendListVector(builder, numElems):
    return UserFriendSpotStartHighPrioPlaceFriendListVector(builder, numElems)

def UserFriendSpotAddPlaceNormalIndex(builder, placeNormalIndex):
    builder.PrependUint8Slot(14, placeNormalIndex, 0)

def AddPlaceNormalIndex(builder, placeNormalIndex):
    UserFriendSpotAddPlaceNormalIndex(builder, placeNormalIndex)

def UserFriendSpotAddPlaceLiveIndex(builder, placeLiveIndex):
    builder.PrependUint8Slot(15, placeLiveIndex, 0)

def AddPlaceLiveIndex(builder, placeLiveIndex):
    UserFriendSpotAddPlaceLiveIndex(builder, placeLiveIndex)

def UserFriendSpotAddPlacePartnerIdList(builder, placePartnerIdList):
    builder.PrependUOffsetTRelativeSlot(16, flatbuffers.number_types.UOffsetTFlags.py_type(placePartnerIdList), 0)

def AddPlacePartnerIdList(builder, placePartnerIdList):
    UserFriendSpotAddPlacePartnerIdList(builder, placePartnerIdList)

def UserFriendSpotStartPlacePartnerIdListVector(builder, numElems):
    return builder.StartVector(4, numElems, 4)

def StartPlacePartnerIdListVector(builder, numElems):
    return UserFriendSpotStartPlacePartnerIdListVector(builder, numElems)

def UserFriendSpotEnd(builder):
    return builder.EndObject()

def End(builder):
    return UserFriendSpotEnd(builder)
