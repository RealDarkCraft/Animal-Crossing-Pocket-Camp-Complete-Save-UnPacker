# automatically generated by the FlatBuffers compiler, do not modify

# namespace: Acpcc

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class UserItemStockOneSlotSetElement(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = UserItemStockOneSlotSetElement()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsUserItemStockOneSlotSetElement(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # UserItemStockOneSlotSetElement
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # UserItemStockOneSlotSetElement
    def Id(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # UserItemStockOneSlotSetElement
    def ItemId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # UserItemStockOneSlotSetElement
    def Date(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # UserItemStockOneSlotSetElement
    def IsChecked(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # UserItemStockOneSlotSetElement
    def Num(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int16Flags, o + self._tab.Pos)
        return 0

    # UserItemStockOneSlotSetElement
    def Guid(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # UserItemStockOneSlotSetElement
    def PutPlace(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint8Flags, o + self._tab.Pos)
        return 0

    # UserItemStockOneSlotSetElement
    def IsLock(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(18))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

def UserItemStockOneSlotSetElementStart(builder):
    builder.StartObject(8)

def Start(builder):
    UserItemStockOneSlotSetElementStart(builder)

def UserItemStockOneSlotSetElementAddId(builder, id):
    builder.PrependUint32Slot(0, id, 0)

def AddId(builder, id):
    UserItemStockOneSlotSetElementAddId(builder, id)

def UserItemStockOneSlotSetElementAddItemId(builder, itemId):
    builder.PrependUint32Slot(1, itemId, 0)

def AddItemId(builder, itemId):
    UserItemStockOneSlotSetElementAddItemId(builder, itemId)

def UserItemStockOneSlotSetElementAddDate(builder, date):
    builder.PrependUint32Slot(2, date, 0)

def AddDate(builder, date):
    UserItemStockOneSlotSetElementAddDate(builder, date)

def UserItemStockOneSlotSetElementAddIsChecked(builder, isChecked):
    builder.PrependBoolSlot(3, isChecked, 0)

def AddIsChecked(builder, isChecked):
    UserItemStockOneSlotSetElementAddIsChecked(builder, isChecked)

def UserItemStockOneSlotSetElementAddNum(builder, num):
    builder.PrependInt16Slot(4, num, 0)

def AddNum(builder, num):
    UserItemStockOneSlotSetElementAddNum(builder, num)

def UserItemStockOneSlotSetElementAddGuid(builder, guid):
    builder.PrependUOffsetTRelativeSlot(5, flatbuffers.number_types.UOffsetTFlags.py_type(guid), 0)

def AddGuid(builder, guid):
    UserItemStockOneSlotSetElementAddGuid(builder, guid)

def UserItemStockOneSlotSetElementAddPutPlace(builder, putPlace):
    builder.PrependUint8Slot(6, putPlace, 0)

def AddPutPlace(builder, putPlace):
    UserItemStockOneSlotSetElementAddPutPlace(builder, putPlace)

def UserItemStockOneSlotSetElementAddIsLock(builder, isLock):
    builder.PrependBoolSlot(7, isLock, 0)

def AddIsLock(builder, isLock):
    UserItemStockOneSlotSetElementAddIsLock(builder, isLock)

def UserItemStockOneSlotSetElementEnd(builder):
    return builder.EndObject()

def End(builder):
    return UserItemStockOneSlotSetElementEnd(builder)
