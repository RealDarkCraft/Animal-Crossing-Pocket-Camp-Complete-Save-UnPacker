# automatically generated by the FlatBuffers compiler, do not modify

# namespace: Acpcc

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class UserMyNintendoMissionOneSlot(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = UserMyNintendoMissionOneSlot()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsUserMyNintendoMissionOneSlot(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # UserMyNintendoMissionOneSlot
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # UserMyNintendoMissionOneSlot
    def Id(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # UserMyNintendoMissionOneSlot
    def MissionKey(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # UserMyNintendoMissionOneSlot
    def LimitEndsAt(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

def UserMyNintendoMissionOneSlotStart(builder):
    builder.StartObject(3)

def Start(builder):
    UserMyNintendoMissionOneSlotStart(builder)

def UserMyNintendoMissionOneSlotAddId(builder, id):
    builder.PrependUint32Slot(0, id, 0)

def AddId(builder, id):
    UserMyNintendoMissionOneSlotAddId(builder, id)

def UserMyNintendoMissionOneSlotAddMissionKey(builder, missionKey):
    builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(missionKey), 0)

def AddMissionKey(builder, missionKey):
    UserMyNintendoMissionOneSlotAddMissionKey(builder, missionKey)

def UserMyNintendoMissionOneSlotAddLimitEndsAt(builder, limitEndsAt):
    builder.PrependInt64Slot(2, limitEndsAt, 0)

def AddLimitEndsAt(builder, limitEndsAt):
    UserMyNintendoMissionOneSlotAddLimitEndsAt(builder, limitEndsAt)

def UserMyNintendoMissionOneSlotEnd(builder):
    return builder.EndObject()

def End(builder):
    return UserMyNintendoMissionOneSlotEnd(builder)
