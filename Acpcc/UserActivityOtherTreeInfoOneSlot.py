# automatically generated by the FlatBuffers compiler, do not modify

# namespace: Acpcc

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class UserActivityOtherTreeInfoOneSlot(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = UserActivityOtherTreeInfoOneSlot()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsUserActivityOtherTreeInfoOneSlot(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # UserActivityOtherTreeInfoOneSlot
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # UserActivityOtherTreeInfoOneSlot
    def Id(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # UserActivityOtherTreeInfoOneSlot
    def TreeId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # UserActivityOtherTreeInfoOneSlot
    def Status(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # UserActivityOtherTreeInfoOneSlot
    def Price(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # UserActivityOtherTreeInfoOneSlot
    def Label(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

def UserActivityOtherTreeInfoOneSlotStart(builder):
    builder.StartObject(5)

def Start(builder):
    UserActivityOtherTreeInfoOneSlotStart(builder)

def UserActivityOtherTreeInfoOneSlotAddId(builder, id):
    builder.PrependUint32Slot(0, id, 0)

def AddId(builder, id):
    UserActivityOtherTreeInfoOneSlotAddId(builder, id)

def UserActivityOtherTreeInfoOneSlotAddTreeId(builder, treeId):
    builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(treeId), 0)

def AddTreeId(builder, treeId):
    UserActivityOtherTreeInfoOneSlotAddTreeId(builder, treeId)

def UserActivityOtherTreeInfoOneSlotAddStatus(builder, status):
    builder.PrependInt32Slot(2, status, 0)

def AddStatus(builder, status):
    UserActivityOtherTreeInfoOneSlotAddStatus(builder, status)

def UserActivityOtherTreeInfoOneSlotAddPrice(builder, price):
    builder.PrependInt32Slot(3, price, 0)

def AddPrice(builder, price):
    UserActivityOtherTreeInfoOneSlotAddPrice(builder, price)

def UserActivityOtherTreeInfoOneSlotAddLabel(builder, label):
    builder.PrependUOffsetTRelativeSlot(4, flatbuffers.number_types.UOffsetTFlags.py_type(label), 0)

def AddLabel(builder, label):
    UserActivityOtherTreeInfoOneSlotAddLabel(builder, label)

def UserActivityOtherTreeInfoOneSlotEnd(builder):
    return builder.EndObject()

def End(builder):
    return UserActivityOtherTreeInfoOneSlotEnd(builder)
