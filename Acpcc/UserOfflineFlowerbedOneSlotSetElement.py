# automatically generated by the FlatBuffers compiler, do not modify

# namespace: Acpcc

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class UserOfflineFlowerbedOneSlotSetElement(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = UserOfflineFlowerbedOneSlotSetElement()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsUserOfflineFlowerbedOneSlotSetElement(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # UserOfflineFlowerbedOneSlotSetElement
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # UserOfflineFlowerbedOneSlotSetElement
    def SequentialId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # UserOfflineFlowerbedOneSlotSetElement
    def FlowerbedId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # UserOfflineFlowerbedOneSlotSetElement
    def PlayerId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # UserOfflineFlowerbedOneSlotSetElement
    def PlantType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # UserOfflineFlowerbedOneSlotSetElement
    def SecToBud(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # UserOfflineFlowerbedOneSlotSetElement
    def SecToHaveBranch(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # UserOfflineFlowerbedOneSlotSetElement
    def SecToComplete(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # UserOfflineFlowerbedOneSlotSetElement
    def SecToBeDry(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(18))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # UserOfflineFlowerbedOneSlotSetElement
    def SecToBeWithered(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(20))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # UserOfflineFlowerbedOneSlotSetElement
    def SeedKey(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(22))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # UserOfflineFlowerbedOneSlotSetElement
    def CropKey(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(24))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # UserOfflineFlowerbedOneSlotSetElement
    def AnimalKey(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(26))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # UserOfflineFlowerbedOneSlotSetElement
    def AnimalCatchEventKey(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(28))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # UserOfflineFlowerbedOneSlotSetElement
    def SeedPlantedAt(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(30))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # UserOfflineFlowerbedOneSlotSetElement
    def WateredAt(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(32))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # UserOfflineFlowerbedOneSlotSetElement
    def PastGrewSec(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(34))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # UserOfflineFlowerbedOneSlotSetElement
    def CreatedAt(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(36))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # UserOfflineFlowerbedOneSlotSetElement
    def UpdatedAt(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(38))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # UserOfflineFlowerbedOneSlotSetElement
    def GeneKey1(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(40))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # UserOfflineFlowerbedOneSlotSetElement
    def GeneKey2(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(42))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

def UserOfflineFlowerbedOneSlotSetElementStart(builder):
    builder.StartObject(20)

def Start(builder):
    UserOfflineFlowerbedOneSlotSetElementStart(builder)

def UserOfflineFlowerbedOneSlotSetElementAddSequentialId(builder, sequentialId):
    builder.PrependInt32Slot(0, sequentialId, 0)

def AddSequentialId(builder, sequentialId):
    UserOfflineFlowerbedOneSlotSetElementAddSequentialId(builder, sequentialId)

def UserOfflineFlowerbedOneSlotSetElementAddFlowerbedId(builder, flowerbedId):
    builder.PrependUint32Slot(1, flowerbedId, 0)

def AddFlowerbedId(builder, flowerbedId):
    UserOfflineFlowerbedOneSlotSetElementAddFlowerbedId(builder, flowerbedId)

def UserOfflineFlowerbedOneSlotSetElementAddPlayerId(builder, playerId):
    builder.PrependUOffsetTRelativeSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(playerId), 0)

def AddPlayerId(builder, playerId):
    UserOfflineFlowerbedOneSlotSetElementAddPlayerId(builder, playerId)

def UserOfflineFlowerbedOneSlotSetElementAddPlantType(builder, plantType):
    builder.PrependUint32Slot(3, plantType, 0)

def AddPlantType(builder, plantType):
    UserOfflineFlowerbedOneSlotSetElementAddPlantType(builder, plantType)

def UserOfflineFlowerbedOneSlotSetElementAddSecToBud(builder, secToBud):
    builder.PrependUint32Slot(4, secToBud, 0)

def AddSecToBud(builder, secToBud):
    UserOfflineFlowerbedOneSlotSetElementAddSecToBud(builder, secToBud)

def UserOfflineFlowerbedOneSlotSetElementAddSecToHaveBranch(builder, secToHaveBranch):
    builder.PrependUint32Slot(5, secToHaveBranch, 0)

def AddSecToHaveBranch(builder, secToHaveBranch):
    UserOfflineFlowerbedOneSlotSetElementAddSecToHaveBranch(builder, secToHaveBranch)

def UserOfflineFlowerbedOneSlotSetElementAddSecToComplete(builder, secToComplete):
    builder.PrependUint32Slot(6, secToComplete, 0)

def AddSecToComplete(builder, secToComplete):
    UserOfflineFlowerbedOneSlotSetElementAddSecToComplete(builder, secToComplete)

def UserOfflineFlowerbedOneSlotSetElementAddSecToBeDry(builder, secToBeDry):
    builder.PrependUint32Slot(7, secToBeDry, 0)

def AddSecToBeDry(builder, secToBeDry):
    UserOfflineFlowerbedOneSlotSetElementAddSecToBeDry(builder, secToBeDry)

def UserOfflineFlowerbedOneSlotSetElementAddSecToBeWithered(builder, secToBeWithered):
    builder.PrependUint32Slot(8, secToBeWithered, 0)

def AddSecToBeWithered(builder, secToBeWithered):
    UserOfflineFlowerbedOneSlotSetElementAddSecToBeWithered(builder, secToBeWithered)

def UserOfflineFlowerbedOneSlotSetElementAddSeedKey(builder, seedKey):
    builder.PrependUOffsetTRelativeSlot(9, flatbuffers.number_types.UOffsetTFlags.py_type(seedKey), 0)

def AddSeedKey(builder, seedKey):
    UserOfflineFlowerbedOneSlotSetElementAddSeedKey(builder, seedKey)

def UserOfflineFlowerbedOneSlotSetElementAddCropKey(builder, cropKey):
    builder.PrependUOffsetTRelativeSlot(10, flatbuffers.number_types.UOffsetTFlags.py_type(cropKey), 0)

def AddCropKey(builder, cropKey):
    UserOfflineFlowerbedOneSlotSetElementAddCropKey(builder, cropKey)

def UserOfflineFlowerbedOneSlotSetElementAddAnimalKey(builder, animalKey):
    builder.PrependUOffsetTRelativeSlot(11, flatbuffers.number_types.UOffsetTFlags.py_type(animalKey), 0)

def AddAnimalKey(builder, animalKey):
    UserOfflineFlowerbedOneSlotSetElementAddAnimalKey(builder, animalKey)

def UserOfflineFlowerbedOneSlotSetElementAddAnimalCatchEventKey(builder, animalCatchEventKey):
    builder.PrependUOffsetTRelativeSlot(12, flatbuffers.number_types.UOffsetTFlags.py_type(animalCatchEventKey), 0)

def AddAnimalCatchEventKey(builder, animalCatchEventKey):
    UserOfflineFlowerbedOneSlotSetElementAddAnimalCatchEventKey(builder, animalCatchEventKey)

def UserOfflineFlowerbedOneSlotSetElementAddSeedPlantedAt(builder, seedPlantedAt):
    builder.PrependInt64Slot(13, seedPlantedAt, 0)

def AddSeedPlantedAt(builder, seedPlantedAt):
    UserOfflineFlowerbedOneSlotSetElementAddSeedPlantedAt(builder, seedPlantedAt)

def UserOfflineFlowerbedOneSlotSetElementAddWateredAt(builder, wateredAt):
    builder.PrependInt64Slot(14, wateredAt, 0)

def AddWateredAt(builder, wateredAt):
    UserOfflineFlowerbedOneSlotSetElementAddWateredAt(builder, wateredAt)

def UserOfflineFlowerbedOneSlotSetElementAddPastGrewSec(builder, pastGrewSec):
    builder.PrependInt64Slot(15, pastGrewSec, 0)

def AddPastGrewSec(builder, pastGrewSec):
    UserOfflineFlowerbedOneSlotSetElementAddPastGrewSec(builder, pastGrewSec)

def UserOfflineFlowerbedOneSlotSetElementAddCreatedAt(builder, createdAt):
    builder.PrependInt64Slot(16, createdAt, 0)

def AddCreatedAt(builder, createdAt):
    UserOfflineFlowerbedOneSlotSetElementAddCreatedAt(builder, createdAt)

def UserOfflineFlowerbedOneSlotSetElementAddUpdatedAt(builder, updatedAt):
    builder.PrependInt64Slot(17, updatedAt, 0)

def AddUpdatedAt(builder, updatedAt):
    UserOfflineFlowerbedOneSlotSetElementAddUpdatedAt(builder, updatedAt)

def UserOfflineFlowerbedOneSlotSetElementAddGeneKey1(builder, geneKey1):
    builder.PrependUOffsetTRelativeSlot(18, flatbuffers.number_types.UOffsetTFlags.py_type(geneKey1), 0)

def AddGeneKey1(builder, geneKey1):
    UserOfflineFlowerbedOneSlotSetElementAddGeneKey1(builder, geneKey1)

def UserOfflineFlowerbedOneSlotSetElementAddGeneKey2(builder, geneKey2):
    builder.PrependUOffsetTRelativeSlot(19, flatbuffers.number_types.UOffsetTFlags.py_type(geneKey2), 0)

def AddGeneKey2(builder, geneKey2):
    UserOfflineFlowerbedOneSlotSetElementAddGeneKey2(builder, geneKey2)

def UserOfflineFlowerbedOneSlotSetElementEnd(builder):
    return builder.EndObject()

def End(builder):
    return UserOfflineFlowerbedOneSlotSetElementEnd(builder)
