# automatically generated by the FlatBuffers compiler, do not modify

# namespace: Acpcc

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class UserQuestHousyuElement(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = UserQuestHousyuElement()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsUserQuestHousyuElement(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # UserQuestHousyuElement
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # UserQuestHousyuElement
    def Bell(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # UserQuestHousyuElement
    def LovePoint(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # UserQuestHousyuElement
    def QuestItemNumOneSlots(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            x = self._tab.Vector(o)
            x += flatbuffers.number_types.UOffsetTFlags.py_type(j) * 4
            x = self._tab.Indirect(x)
            from Acpcc.UserQuestItemNumOneSlotElement import UserQuestItemNumOneSlotElement
            obj = UserQuestItemNumOneSlotElement()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # UserQuestHousyuElement
    def QuestItemNumOneSlotsLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # UserQuestHousyuElement
    def QuestItemNumOneSlotsIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        return o == 0

def UserQuestHousyuElementStart(builder):
    builder.StartObject(3)

def Start(builder):
    UserQuestHousyuElementStart(builder)

def UserQuestHousyuElementAddBell(builder, bell):
    builder.PrependInt32Slot(0, bell, 0)

def AddBell(builder, bell):
    UserQuestHousyuElementAddBell(builder, bell)

def UserQuestHousyuElementAddLovePoint(builder, lovePoint):
    builder.PrependInt32Slot(1, lovePoint, 0)

def AddLovePoint(builder, lovePoint):
    UserQuestHousyuElementAddLovePoint(builder, lovePoint)

def UserQuestHousyuElementAddQuestItemNumOneSlots(builder, questItemNumOneSlots):
    builder.PrependUOffsetTRelativeSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(questItemNumOneSlots), 0)

def AddQuestItemNumOneSlots(builder, questItemNumOneSlots):
    UserQuestHousyuElementAddQuestItemNumOneSlots(builder, questItemNumOneSlots)

def UserQuestHousyuElementStartQuestItemNumOneSlotsVector(builder, numElems):
    return builder.StartVector(4, numElems, 4)

def StartQuestItemNumOneSlotsVector(builder, numElems):
    return UserQuestHousyuElementStartQuestItemNumOneSlotsVector(builder, numElems)

def UserQuestHousyuElementEnd(builder):
    return builder.EndObject()

def End(builder):
    return UserQuestHousyuElementEnd(builder)
