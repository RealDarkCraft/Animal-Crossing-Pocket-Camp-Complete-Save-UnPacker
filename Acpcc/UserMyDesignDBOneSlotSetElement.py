# automatically generated by the FlatBuffers compiler, do not modify

# namespace: Acpcc

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class UserMyDesignDBOneSlotSetElement(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = UserMyDesignDBOneSlotSetElement()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsUserMyDesignDBOneSlotSetElement(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # UserMyDesignDBOneSlotSetElement
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # UserMyDesignDBOneSlotSetElement
    def MyDesignId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # UserMyDesignDBOneSlotSetElement
    def MyDesignName(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # UserMyDesignDBOneSlotSetElement
    def TemplateType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # UserMyDesignDBOneSlotSetElement
    def AuthorName(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

def UserMyDesignDBOneSlotSetElementStart(builder):
    builder.StartObject(4)

def Start(builder):
    UserMyDesignDBOneSlotSetElementStart(builder)

def UserMyDesignDBOneSlotSetElementAddMyDesignId(builder, myDesignId):
    builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(myDesignId), 0)

def AddMyDesignId(builder, myDesignId):
    UserMyDesignDBOneSlotSetElementAddMyDesignId(builder, myDesignId)

def UserMyDesignDBOneSlotSetElementAddMyDesignName(builder, myDesignName):
    builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(myDesignName), 0)

def AddMyDesignName(builder, myDesignName):
    UserMyDesignDBOneSlotSetElementAddMyDesignName(builder, myDesignName)

def UserMyDesignDBOneSlotSetElementAddTemplateType(builder, templateType):
    builder.PrependInt32Slot(2, templateType, 0)

def AddTemplateType(builder, templateType):
    UserMyDesignDBOneSlotSetElementAddTemplateType(builder, templateType)

def UserMyDesignDBOneSlotSetElementAddAuthorName(builder, authorName):
    builder.PrependUOffsetTRelativeSlot(3, flatbuffers.number_types.UOffsetTFlags.py_type(authorName), 0)

def AddAuthorName(builder, authorName):
    UserMyDesignDBOneSlotSetElementAddAuthorName(builder, authorName)

def UserMyDesignDBOneSlotSetElementEnd(builder):
    return builder.EndObject()

def End(builder):
    return UserMyDesignDBOneSlotSetElementEnd(builder)
