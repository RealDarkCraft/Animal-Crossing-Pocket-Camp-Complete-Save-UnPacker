# automatically generated by the FlatBuffers compiler, do not modify

# namespace: Acpcc

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class UserGulliverShipDestinationSetElement(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = UserGulliverShipDestinationSetElement()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsUserGulliverShipDestinationSetElement(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # UserGulliverShipDestinationSetElement
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # UserGulliverShipDestinationSetElement
    def DestinationId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # UserGulliverShipDestinationSetElement
    def ReturnTime(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # UserGulliverShipDestinationSetElement
    def ExportItemIdList(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 4))
        return 0

    # UserGulliverShipDestinationSetElement
    def ExportItemIdListAsNumpy(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.GetVectorAsNumpy(flatbuffers.number_types.Uint32Flags, o)
        return 0

    # UserGulliverShipDestinationSetElement
    def ExportItemIdListLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # UserGulliverShipDestinationSetElement
    def ExportItemIdListIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        return o == 0

    # UserGulliverShipDestinationSetElement
    def ExportItemAmountList(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.Get(flatbuffers.number_types.Int16Flags, a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 2))
        return 0

    # UserGulliverShipDestinationSetElement
    def ExportItemAmountListAsNumpy(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.GetVectorAsNumpy(flatbuffers.number_types.Int16Flags, o)
        return 0

    # UserGulliverShipDestinationSetElement
    def ExportItemAmountListLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # UserGulliverShipDestinationSetElement
    def ExportItemAmountListIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        return o == 0

    # UserGulliverShipDestinationSetElement
    def RewardItemBoxIdList(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 4))
        return 0

    # UserGulliverShipDestinationSetElement
    def RewardItemBoxIdListAsNumpy(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.GetVectorAsNumpy(flatbuffers.number_types.Uint32Flags, o)
        return 0

    # UserGulliverShipDestinationSetElement
    def RewardItemBoxIdListLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # UserGulliverShipDestinationSetElement
    def RewardItemBoxIdListIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        return o == 0

    # UserGulliverShipDestinationSetElement
    def RewardItemBoxLotteryCountList(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.Get(flatbuffers.number_types.Int16Flags, a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 2))
        return 0

    # UserGulliverShipDestinationSetElement
    def RewardItemBoxLotteryCountListAsNumpy(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.GetVectorAsNumpy(flatbuffers.number_types.Int16Flags, o)
        return 0

    # UserGulliverShipDestinationSetElement
    def RewardItemBoxLotteryCountListLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # UserGulliverShipDestinationSetElement
    def RewardItemBoxLotteryCountListIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        return o == 0

    # UserGulliverShipDestinationSetElement
    def RewardBoxTypeList(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.Get(flatbuffers.number_types.Uint8Flags, a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 1))
        return 0

    # UserGulliverShipDestinationSetElement
    def RewardBoxTypeListAsNumpy(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            return self._tab.GetVectorAsNumpy(flatbuffers.number_types.Uint8Flags, o)
        return 0

    # UserGulliverShipDestinationSetElement
    def RewardBoxTypeListLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # UserGulliverShipDestinationSetElement
    def RewardBoxTypeListIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        return o == 0

    # UserGulliverShipDestinationSetElement
    def RewardBoxLogList(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(18))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 4))
        return 0

    # UserGulliverShipDestinationSetElement
    def RewardBoxLogListAsNumpy(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(18))
        if o != 0:
            return self._tab.GetVectorAsNumpy(flatbuffers.number_types.Uint32Flags, o)
        return 0

    # UserGulliverShipDestinationSetElement
    def RewardBoxLogListLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(18))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # UserGulliverShipDestinationSetElement
    def RewardBoxLogListIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(18))
        return o == 0

    # UserGulliverShipDestinationSetElement
    def RewardFirstItemBoxId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(20))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

def UserGulliverShipDestinationSetElementStart(builder):
    builder.StartObject(9)

def Start(builder):
    UserGulliverShipDestinationSetElementStart(builder)

def UserGulliverShipDestinationSetElementAddDestinationId(builder, destinationId):
    builder.PrependUint32Slot(0, destinationId, 0)

def AddDestinationId(builder, destinationId):
    UserGulliverShipDestinationSetElementAddDestinationId(builder, destinationId)

def UserGulliverShipDestinationSetElementAddReturnTime(builder, returnTime):
    builder.PrependInt64Slot(1, returnTime, 0)

def AddReturnTime(builder, returnTime):
    UserGulliverShipDestinationSetElementAddReturnTime(builder, returnTime)

def UserGulliverShipDestinationSetElementAddExportItemIdList(builder, exportItemIdList):
    builder.PrependUOffsetTRelativeSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(exportItemIdList), 0)

def AddExportItemIdList(builder, exportItemIdList):
    UserGulliverShipDestinationSetElementAddExportItemIdList(builder, exportItemIdList)

def UserGulliverShipDestinationSetElementStartExportItemIdListVector(builder, numElems):
    return builder.StartVector(4, numElems, 4)

def StartExportItemIdListVector(builder, numElems):
    return UserGulliverShipDestinationSetElementStartExportItemIdListVector(builder, numElems)

def UserGulliverShipDestinationSetElementAddExportItemAmountList(builder, exportItemAmountList):
    builder.PrependUOffsetTRelativeSlot(3, flatbuffers.number_types.UOffsetTFlags.py_type(exportItemAmountList), 0)

def AddExportItemAmountList(builder, exportItemAmountList):
    UserGulliverShipDestinationSetElementAddExportItemAmountList(builder, exportItemAmountList)

def UserGulliverShipDestinationSetElementStartExportItemAmountListVector(builder, numElems):
    return builder.StartVector(2, numElems, 2)

def StartExportItemAmountListVector(builder, numElems):
    return UserGulliverShipDestinationSetElementStartExportItemAmountListVector(builder, numElems)

def UserGulliverShipDestinationSetElementAddRewardItemBoxIdList(builder, rewardItemBoxIdList):
    builder.PrependUOffsetTRelativeSlot(4, flatbuffers.number_types.UOffsetTFlags.py_type(rewardItemBoxIdList), 0)

def AddRewardItemBoxIdList(builder, rewardItemBoxIdList):
    UserGulliverShipDestinationSetElementAddRewardItemBoxIdList(builder, rewardItemBoxIdList)

def UserGulliverShipDestinationSetElementStartRewardItemBoxIdListVector(builder, numElems):
    return builder.StartVector(4, numElems, 4)

def StartRewardItemBoxIdListVector(builder, numElems):
    return UserGulliverShipDestinationSetElementStartRewardItemBoxIdListVector(builder, numElems)

def UserGulliverShipDestinationSetElementAddRewardItemBoxLotteryCountList(builder, rewardItemBoxLotteryCountList):
    builder.PrependUOffsetTRelativeSlot(5, flatbuffers.number_types.UOffsetTFlags.py_type(rewardItemBoxLotteryCountList), 0)

def AddRewardItemBoxLotteryCountList(builder, rewardItemBoxLotteryCountList):
    UserGulliverShipDestinationSetElementAddRewardItemBoxLotteryCountList(builder, rewardItemBoxLotteryCountList)

def UserGulliverShipDestinationSetElementStartRewardItemBoxLotteryCountListVector(builder, numElems):
    return builder.StartVector(2, numElems, 2)

def StartRewardItemBoxLotteryCountListVector(builder, numElems):
    return UserGulliverShipDestinationSetElementStartRewardItemBoxLotteryCountListVector(builder, numElems)

def UserGulliverShipDestinationSetElementAddRewardBoxTypeList(builder, rewardBoxTypeList):
    builder.PrependUOffsetTRelativeSlot(6, flatbuffers.number_types.UOffsetTFlags.py_type(rewardBoxTypeList), 0)

def AddRewardBoxTypeList(builder, rewardBoxTypeList):
    UserGulliverShipDestinationSetElementAddRewardBoxTypeList(builder, rewardBoxTypeList)

def UserGulliverShipDestinationSetElementStartRewardBoxTypeListVector(builder, numElems):
    return builder.StartVector(1, numElems, 1)

def StartRewardBoxTypeListVector(builder, numElems):
    return UserGulliverShipDestinationSetElementStartRewardBoxTypeListVector(builder, numElems)

def UserGulliverShipDestinationSetElementAddRewardBoxLogList(builder, rewardBoxLogList):
    builder.PrependUOffsetTRelativeSlot(7, flatbuffers.number_types.UOffsetTFlags.py_type(rewardBoxLogList), 0)

def AddRewardBoxLogList(builder, rewardBoxLogList):
    UserGulliverShipDestinationSetElementAddRewardBoxLogList(builder, rewardBoxLogList)

def UserGulliverShipDestinationSetElementStartRewardBoxLogListVector(builder, numElems):
    return builder.StartVector(4, numElems, 4)

def StartRewardBoxLogListVector(builder, numElems):
    return UserGulliverShipDestinationSetElementStartRewardBoxLogListVector(builder, numElems)

def UserGulliverShipDestinationSetElementAddRewardFirstItemBoxId(builder, rewardFirstItemBoxId):
    builder.PrependUint32Slot(8, rewardFirstItemBoxId, 0)

def AddRewardFirstItemBoxId(builder, rewardFirstItemBoxId):
    UserGulliverShipDestinationSetElementAddRewardFirstItemBoxId(builder, rewardFirstItemBoxId)

def UserGulliverShipDestinationSetElementEnd(builder):
    return builder.EndObject()

def End(builder):
    return UserGulliverShipDestinationSetElementEnd(builder)
