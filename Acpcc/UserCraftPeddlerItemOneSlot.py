# automatically generated by the FlatBuffers compiler, do not modify

# namespace: Acpcc

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class UserCraftPeddlerItemOneSlot(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = UserCraftPeddlerItemOneSlot()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsUserCraftPeddlerItemOneSlot(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # UserCraftPeddlerItemOneSlot
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # UserCraftPeddlerItemOneSlot
    def Id(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # UserCraftPeddlerItemOneSlot
    def PeddlerSettingId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # UserCraftPeddlerItemOneSlot
    def PeddlerItemId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # UserCraftPeddlerItemOneSlot
    def SaleStatus(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint8Flags, o + self._tab.Pos)
        return 0

    # UserCraftPeddlerItemOneSlot
    def IsSeen(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

def UserCraftPeddlerItemOneSlotStart(builder):
    builder.StartObject(5)

def Start(builder):
    UserCraftPeddlerItemOneSlotStart(builder)

def UserCraftPeddlerItemOneSlotAddId(builder, id):
    builder.PrependUint32Slot(0, id, 0)

def AddId(builder, id):
    UserCraftPeddlerItemOneSlotAddId(builder, id)

def UserCraftPeddlerItemOneSlotAddPeddlerSettingId(builder, peddlerSettingId):
    builder.PrependUint32Slot(1, peddlerSettingId, 0)

def AddPeddlerSettingId(builder, peddlerSettingId):
    UserCraftPeddlerItemOneSlotAddPeddlerSettingId(builder, peddlerSettingId)

def UserCraftPeddlerItemOneSlotAddPeddlerItemId(builder, peddlerItemId):
    builder.PrependUint32Slot(2, peddlerItemId, 0)

def AddPeddlerItemId(builder, peddlerItemId):
    UserCraftPeddlerItemOneSlotAddPeddlerItemId(builder, peddlerItemId)

def UserCraftPeddlerItemOneSlotAddSaleStatus(builder, saleStatus):
    builder.PrependUint8Slot(3, saleStatus, 0)

def AddSaleStatus(builder, saleStatus):
    UserCraftPeddlerItemOneSlotAddSaleStatus(builder, saleStatus)

def UserCraftPeddlerItemOneSlotAddIsSeen(builder, isSeen):
    builder.PrependBoolSlot(4, isSeen, 0)

def AddIsSeen(builder, isSeen):
    UserCraftPeddlerItemOneSlotAddIsSeen(builder, isSeen)

def UserCraftPeddlerItemOneSlotEnd(builder):
    return builder.EndObject()

def End(builder):
    return UserCraftPeddlerItemOneSlotEnd(builder)
