# automatically generated by the FlatBuffers compiler, do not modify

# namespace: Acpcc

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class UserPanelMissionSheetOneSlotSetElement(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = UserPanelMissionSheetOneSlotSetElement()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsUserPanelMissionSheetOneSlotSetElement(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # UserPanelMissionSheetOneSlotSetElement
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # UserPanelMissionSheetOneSlotSetElement
    def SheetId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # UserPanelMissionSheetOneSlotSetElement
    def SelectCategory(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint8Flags, o + self._tab.Pos)
        return 0

    # UserPanelMissionSheetOneSlotSetElement
    def SelectChallengeId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # UserPanelMissionSheetOneSlotSetElement
    def SelectDateTime(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # UserPanelMissionSheetOneSlotSetElement
    def ImageName(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # UserPanelMissionSheetOneSlotSetElement
    def CampaignId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

def UserPanelMissionSheetOneSlotSetElementStart(builder):
    builder.StartObject(6)

def Start(builder):
    UserPanelMissionSheetOneSlotSetElementStart(builder)

def UserPanelMissionSheetOneSlotSetElementAddSheetId(builder, sheetId):
    builder.PrependUint32Slot(0, sheetId, 0)

def AddSheetId(builder, sheetId):
    UserPanelMissionSheetOneSlotSetElementAddSheetId(builder, sheetId)

def UserPanelMissionSheetOneSlotSetElementAddSelectCategory(builder, selectCategory):
    builder.PrependUint8Slot(1, selectCategory, 0)

def AddSelectCategory(builder, selectCategory):
    UserPanelMissionSheetOneSlotSetElementAddSelectCategory(builder, selectCategory)

def UserPanelMissionSheetOneSlotSetElementAddSelectChallengeId(builder, selectChallengeId):
    builder.PrependUint32Slot(2, selectChallengeId, 0)

def AddSelectChallengeId(builder, selectChallengeId):
    UserPanelMissionSheetOneSlotSetElementAddSelectChallengeId(builder, selectChallengeId)

def UserPanelMissionSheetOneSlotSetElementAddSelectDateTime(builder, selectDateTime):
    builder.PrependInt64Slot(3, selectDateTime, 0)

def AddSelectDateTime(builder, selectDateTime):
    UserPanelMissionSheetOneSlotSetElementAddSelectDateTime(builder, selectDateTime)

def UserPanelMissionSheetOneSlotSetElementAddImageName(builder, imageName):
    builder.PrependUOffsetTRelativeSlot(4, flatbuffers.number_types.UOffsetTFlags.py_type(imageName), 0)

def AddImageName(builder, imageName):
    UserPanelMissionSheetOneSlotSetElementAddImageName(builder, imageName)

def UserPanelMissionSheetOneSlotSetElementAddCampaignId(builder, campaignId):
    builder.PrependUint32Slot(5, campaignId, 0)

def AddCampaignId(builder, campaignId):
    UserPanelMissionSheetOneSlotSetElementAddCampaignId(builder, campaignId)

def UserPanelMissionSheetOneSlotSetElementEnd(builder):
    return builder.EndObject()

def End(builder):
    return UserPanelMissionSheetOneSlotSetElementEnd(builder)
