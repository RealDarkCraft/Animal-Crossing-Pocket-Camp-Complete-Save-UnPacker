# automatically generated by the FlatBuffers compiler, do not modify

# namespace: Acpcc

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class UserActivityEventMatInfoSlot(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = UserActivityEventMatInfoSlot()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsUserActivityEventMatInfoSlot(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # UserActivityEventMatInfoSlot
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # UserActivityEventMatInfoSlot
    def Id(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # UserActivityEventMatInfoSlot
    def CampaignId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # UserActivityEventMatInfoSlot
    def UniqueId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # UserActivityEventMatInfoSlot
    def PosId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # UserActivityEventMatInfoSlot
    def ItemIdList(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 4))
        return 0

    # UserActivityEventMatInfoSlot
    def ItemIdListAsNumpy(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.GetVectorAsNumpy(flatbuffers.number_types.Uint32Flags, o)
        return 0

    # UserActivityEventMatInfoSlot
    def ItemIdListLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # UserActivityEventMatInfoSlot
    def ItemIdListIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        return o == 0

    # UserActivityEventMatInfoSlot
    def SizeList(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.Get(flatbuffers.number_types.Int32Flags, a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 4))
        return 0

    # UserActivityEventMatInfoSlot
    def SizeListAsNumpy(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.GetVectorAsNumpy(flatbuffers.number_types.Int32Flags, o)
        return 0

    # UserActivityEventMatInfoSlot
    def SizeListLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # UserActivityEventMatInfoSlot
    def SizeListIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        return o == 0

def UserActivityEventMatInfoSlotStart(builder):
    builder.StartObject(6)

def Start(builder):
    UserActivityEventMatInfoSlotStart(builder)

def UserActivityEventMatInfoSlotAddId(builder, id):
    builder.PrependUint32Slot(0, id, 0)

def AddId(builder, id):
    UserActivityEventMatInfoSlotAddId(builder, id)

def UserActivityEventMatInfoSlotAddCampaignId(builder, campaignId):
    builder.PrependUint32Slot(1, campaignId, 0)

def AddCampaignId(builder, campaignId):
    UserActivityEventMatInfoSlotAddCampaignId(builder, campaignId)

def UserActivityEventMatInfoSlotAddUniqueId(builder, uniqueId):
    builder.PrependUint32Slot(2, uniqueId, 0)

def AddUniqueId(builder, uniqueId):
    UserActivityEventMatInfoSlotAddUniqueId(builder, uniqueId)

def UserActivityEventMatInfoSlotAddPosId(builder, posId):
    builder.PrependUOffsetTRelativeSlot(3, flatbuffers.number_types.UOffsetTFlags.py_type(posId), 0)

def AddPosId(builder, posId):
    UserActivityEventMatInfoSlotAddPosId(builder, posId)

def UserActivityEventMatInfoSlotAddItemIdList(builder, itemIdList):
    builder.PrependUOffsetTRelativeSlot(4, flatbuffers.number_types.UOffsetTFlags.py_type(itemIdList), 0)

def AddItemIdList(builder, itemIdList):
    UserActivityEventMatInfoSlotAddItemIdList(builder, itemIdList)

def UserActivityEventMatInfoSlotStartItemIdListVector(builder, numElems):
    return builder.StartVector(4, numElems, 4)

def StartItemIdListVector(builder, numElems):
    return UserActivityEventMatInfoSlotStartItemIdListVector(builder, numElems)

def UserActivityEventMatInfoSlotAddSizeList(builder, sizeList):
    builder.PrependUOffsetTRelativeSlot(5, flatbuffers.number_types.UOffsetTFlags.py_type(sizeList), 0)

def AddSizeList(builder, sizeList):
    UserActivityEventMatInfoSlotAddSizeList(builder, sizeList)

def UserActivityEventMatInfoSlotStartSizeListVector(builder, numElems):
    return builder.StartVector(4, numElems, 4)

def StartSizeListVector(builder, numElems):
    return UserActivityEventMatInfoSlotStartSizeListVector(builder, numElems)

def UserActivityEventMatInfoSlotEnd(builder):
    return builder.EndObject()

def End(builder):
    return UserActivityEventMatInfoSlotEnd(builder)
