# automatically generated by the FlatBuffers compiler, do not modify

# namespace: Acpcc

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class UserMyDesignFurnitureOneSlot(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = UserMyDesignFurnitureOneSlot()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsUserMyDesignFurnitureOneSlot(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # UserMyDesignFurnitureOneSlot
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # UserMyDesignFurnitureOneSlot
    def Id(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # UserMyDesignFurnitureOneSlot
    def MyDesignId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # UserMyDesignFurnitureOneSlot
    def IsChecked(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint8Flags, o + self._tab.Pos)
        return 0

def UserMyDesignFurnitureOneSlotStart(builder):
    builder.StartObject(3)

def Start(builder):
    UserMyDesignFurnitureOneSlotStart(builder)

def UserMyDesignFurnitureOneSlotAddId(builder, id):
    builder.PrependUint32Slot(0, id, 0)

def AddId(builder, id):
    UserMyDesignFurnitureOneSlotAddId(builder, id)

def UserMyDesignFurnitureOneSlotAddMyDesignId(builder, myDesignId):
    builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(myDesignId), 0)

def AddMyDesignId(builder, myDesignId):
    UserMyDesignFurnitureOneSlotAddMyDesignId(builder, myDesignId)

def UserMyDesignFurnitureOneSlotAddIsChecked(builder, isChecked):
    builder.PrependUint8Slot(2, isChecked, 0)

def AddIsChecked(builder, isChecked):
    UserMyDesignFurnitureOneSlotAddIsChecked(builder, isChecked)

def UserMyDesignFurnitureOneSlotEnd(builder):
    return builder.EndObject()

def End(builder):
    return UserMyDesignFurnitureOneSlotEnd(builder)
