# automatically generated by the FlatBuffers compiler, do not modify

# namespace: Acpcc

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class UserEventNoticeOneSlotSetElement(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = UserEventNoticeOneSlotSetElement()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsUserEventNoticeOneSlotSetElement(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # UserEventNoticeOneSlotSetElement
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # UserEventNoticeOneSlotSetElement
    def CampaignId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # UserEventNoticeOneSlotSetElement
    def BeginNoticeCount(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # UserEventNoticeOneSlotSetElement
    def EndNoticeCount(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

def UserEventNoticeOneSlotSetElementStart(builder):
    builder.StartObject(3)

def Start(builder):
    UserEventNoticeOneSlotSetElementStart(builder)

def UserEventNoticeOneSlotSetElementAddCampaignId(builder, campaignId):
    builder.PrependUint32Slot(0, campaignId, 0)

def AddCampaignId(builder, campaignId):
    UserEventNoticeOneSlotSetElementAddCampaignId(builder, campaignId)

def UserEventNoticeOneSlotSetElementAddBeginNoticeCount(builder, beginNoticeCount):
    builder.PrependUint32Slot(1, beginNoticeCount, 0)

def AddBeginNoticeCount(builder, beginNoticeCount):
    UserEventNoticeOneSlotSetElementAddBeginNoticeCount(builder, beginNoticeCount)

def UserEventNoticeOneSlotSetElementAddEndNoticeCount(builder, endNoticeCount):
    builder.PrependUint32Slot(2, endNoticeCount, 0)

def AddEndNoticeCount(builder, endNoticeCount):
    UserEventNoticeOneSlotSetElementAddEndNoticeCount(builder, endNoticeCount)

def UserEventNoticeOneSlotSetElementEnd(builder):
    return builder.EndObject()

def End(builder):
    return UserEventNoticeOneSlotSetElementEnd(builder)
