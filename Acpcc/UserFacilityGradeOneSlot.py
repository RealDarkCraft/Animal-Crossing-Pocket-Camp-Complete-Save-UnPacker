# automatically generated by the FlatBuffers compiler, do not modify

# namespace: Acpcc

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class UserFacilityGradeOneSlot(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = UserFacilityGradeOneSlot()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsUserFacilityGradeOneSlot(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # UserFacilityGradeOneSlot
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # UserFacilityGradeOneSlot
    def Id(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # UserFacilityGradeOneSlot
    def FacilityId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # UserFacilityGradeOneSlot
    def Grade(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint8Flags, o + self._tab.Pos)
        return 0

def UserFacilityGradeOneSlotStart(builder):
    builder.StartObject(3)

def Start(builder):
    UserFacilityGradeOneSlotStart(builder)

def UserFacilityGradeOneSlotAddId(builder, id):
    builder.PrependUint32Slot(0, id, 0)

def AddId(builder, id):
    UserFacilityGradeOneSlotAddId(builder, id)

def UserFacilityGradeOneSlotAddFacilityId(builder, facilityId):
    builder.PrependUint32Slot(1, facilityId, 0)

def AddFacilityId(builder, facilityId):
    UserFacilityGradeOneSlotAddFacilityId(builder, facilityId)

def UserFacilityGradeOneSlotAddGrade(builder, grade):
    builder.PrependUint8Slot(2, grade, 0)

def AddGrade(builder, grade):
    UserFacilityGradeOneSlotAddGrade(builder, grade)

def UserFacilityGradeOneSlotEnd(builder):
    return builder.EndObject()

def End(builder):
    return UserFacilityGradeOneSlotEnd(builder)
