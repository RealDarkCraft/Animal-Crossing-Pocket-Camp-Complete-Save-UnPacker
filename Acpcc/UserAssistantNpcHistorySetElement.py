# automatically generated by the FlatBuffers compiler, do not modify

# namespace: Acpcc

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class UserAssistantNpcHistorySetElement(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = UserAssistantNpcHistorySetElement()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsUserAssistantNpcHistorySetElement(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # UserAssistantNpcHistorySetElement
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # UserAssistantNpcHistorySetElement
    def NpcId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # UserAssistantNpcHistorySetElement
    def AssignedDays(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # UserAssistantNpcHistorySetElement
    def HelpCount(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

def UserAssistantNpcHistorySetElementStart(builder):
    builder.StartObject(3)

def Start(builder):
    UserAssistantNpcHistorySetElementStart(builder)

def UserAssistantNpcHistorySetElementAddNpcId(builder, npcId):
    builder.PrependUint32Slot(0, npcId, 0)

def AddNpcId(builder, npcId):
    UserAssistantNpcHistorySetElementAddNpcId(builder, npcId)

def UserAssistantNpcHistorySetElementAddAssignedDays(builder, assignedDays):
    builder.PrependInt32Slot(1, assignedDays, 0)

def AddAssignedDays(builder, assignedDays):
    UserAssistantNpcHistorySetElementAddAssignedDays(builder, assignedDays)

def UserAssistantNpcHistorySetElementAddHelpCount(builder, helpCount):
    builder.PrependInt32Slot(2, helpCount, 0)

def AddHelpCount(builder, helpCount):
    UserAssistantNpcHistorySetElementAddHelpCount(builder, helpCount)

def UserAssistantNpcHistorySetElementEnd(builder):
    return builder.EndObject()

def End(builder):
    return UserAssistantNpcHistorySetElementEnd(builder)
