# automatically generated by the FlatBuffers compiler, do not modify

# namespace: Acpcc

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class UserSksAchievementOneSlot(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = UserSksAchievementOneSlot()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsUserSksAchievementOneSlot(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # UserSksAchievementOneSlot
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # UserSksAchievementOneSlot
    def Id(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # UserSksAchievementOneSlot
    def KeyName(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # UserSksAchievementOneSlot
    def Status(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint8Flags, o + self._tab.Pos)
        return 0

    # UserSksAchievementOneSlot
    def UpdatedAt(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # UserSksAchievementOneSlot
    def KeyId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

def UserSksAchievementOneSlotStart(builder):
    builder.StartObject(5)

def Start(builder):
    UserSksAchievementOneSlotStart(builder)

def UserSksAchievementOneSlotAddId(builder, id):
    builder.PrependUint32Slot(0, id, 0)

def AddId(builder, id):
    UserSksAchievementOneSlotAddId(builder, id)

def UserSksAchievementOneSlotAddKeyName(builder, keyName):
    builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(keyName), 0)

def AddKeyName(builder, keyName):
    UserSksAchievementOneSlotAddKeyName(builder, keyName)

def UserSksAchievementOneSlotAddStatus(builder, status):
    builder.PrependUint8Slot(2, status, 0)

def AddStatus(builder, status):
    UserSksAchievementOneSlotAddStatus(builder, status)

def UserSksAchievementOneSlotAddUpdatedAt(builder, updatedAt):
    builder.PrependInt64Slot(3, updatedAt, 0)

def AddUpdatedAt(builder, updatedAt):
    UserSksAchievementOneSlotAddUpdatedAt(builder, updatedAt)

def UserSksAchievementOneSlotAddKeyId(builder, keyId):
    builder.PrependUint32Slot(4, keyId, 0)

def AddKeyId(builder, keyId):
    UserSksAchievementOneSlotAddKeyId(builder, keyId)

def UserSksAchievementOneSlotEnd(builder):
    return builder.EndObject()

def End(builder):
    return UserSksAchievementOneSlotEnd(builder)
