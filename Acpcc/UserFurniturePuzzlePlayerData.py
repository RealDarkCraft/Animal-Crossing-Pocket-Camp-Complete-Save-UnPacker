# automatically generated by the FlatBuffers compiler, do not modify

# namespace: Acpcc

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class UserFurniturePuzzlePlayerData(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = UserFurniturePuzzlePlayerData()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsUserFurniturePuzzlePlayerData(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # UserFurniturePuzzlePlayerData
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # UserFurniturePuzzlePlayerData
    def Id(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # UserFurniturePuzzlePlayerData
    def Stamina(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # UserFurniturePuzzlePlayerData
    def StaminaLastUpdate(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # UserFurniturePuzzlePlayerData
    def IsEndTutorial(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # UserFurniturePuzzlePlayerData
    def EventFreePlay(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # UserFurniturePuzzlePlayerData
    def LastPlayLessonType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

def UserFurniturePuzzlePlayerDataStart(builder):
    builder.StartObject(6)

def Start(builder):
    UserFurniturePuzzlePlayerDataStart(builder)

def UserFurniturePuzzlePlayerDataAddId(builder, id):
    builder.PrependUint32Slot(0, id, 0)

def AddId(builder, id):
    UserFurniturePuzzlePlayerDataAddId(builder, id)

def UserFurniturePuzzlePlayerDataAddStamina(builder, stamina):
    builder.PrependInt32Slot(1, stamina, 0)

def AddStamina(builder, stamina):
    UserFurniturePuzzlePlayerDataAddStamina(builder, stamina)

def UserFurniturePuzzlePlayerDataAddStaminaLastUpdate(builder, staminaLastUpdate):
    builder.PrependInt64Slot(2, staminaLastUpdate, 0)

def AddStaminaLastUpdate(builder, staminaLastUpdate):
    UserFurniturePuzzlePlayerDataAddStaminaLastUpdate(builder, staminaLastUpdate)

def UserFurniturePuzzlePlayerDataAddIsEndTutorial(builder, isEndTutorial):
    builder.PrependBoolSlot(3, isEndTutorial, 0)

def AddIsEndTutorial(builder, isEndTutorial):
    UserFurniturePuzzlePlayerDataAddIsEndTutorial(builder, isEndTutorial)

def UserFurniturePuzzlePlayerDataAddEventFreePlay(builder, eventFreePlay):
    builder.PrependInt32Slot(4, eventFreePlay, 0)

def AddEventFreePlay(builder, eventFreePlay):
    UserFurniturePuzzlePlayerDataAddEventFreePlay(builder, eventFreePlay)

def UserFurniturePuzzlePlayerDataAddLastPlayLessonType(builder, lastPlayLessonType):
    builder.PrependInt32Slot(5, lastPlayLessonType, 0)

def AddLastPlayLessonType(builder, lastPlayLessonType):
    UserFurniturePuzzlePlayerDataAddLastPlayLessonType(builder, lastPlayLessonType)

def UserFurniturePuzzlePlayerDataEnd(builder):
    return builder.EndObject()

def End(builder):
    return UserFurniturePuzzlePlayerDataEnd(builder)
