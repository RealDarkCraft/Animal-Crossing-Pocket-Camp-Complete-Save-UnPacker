# automatically generated by the FlatBuffers compiler, do not modify

# namespace: Acpcc

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class UserChatHistoryOneSlot(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = UserChatHistoryOneSlot()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsUserChatHistoryOneSlot(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # UserChatHistoryOneSlot
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # UserChatHistoryOneSlot
    def Id(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # UserChatHistoryOneSlot
    def MetalIdx(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # UserChatHistoryOneSlot
    def FileName(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # UserChatHistoryOneSlot
    def MsgLabel(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # UserChatHistoryOneSlot
    def LovePoint(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # UserChatHistoryOneSlot
    def LeadScreenshot(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

def UserChatHistoryOneSlotStart(builder):
    builder.StartObject(6)

def Start(builder):
    UserChatHistoryOneSlotStart(builder)

def UserChatHistoryOneSlotAddId(builder, id):
    builder.PrependUint32Slot(0, id, 0)

def AddId(builder, id):
    UserChatHistoryOneSlotAddId(builder, id)

def UserChatHistoryOneSlotAddMetalIdx(builder, metalIdx):
    builder.PrependInt32Slot(1, metalIdx, 0)

def AddMetalIdx(builder, metalIdx):
    UserChatHistoryOneSlotAddMetalIdx(builder, metalIdx)

def UserChatHistoryOneSlotAddFileName(builder, fileName):
    builder.PrependUOffsetTRelativeSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(fileName), 0)

def AddFileName(builder, fileName):
    UserChatHistoryOneSlotAddFileName(builder, fileName)

def UserChatHistoryOneSlotAddMsgLabel(builder, msgLabel):
    builder.PrependUOffsetTRelativeSlot(3, flatbuffers.number_types.UOffsetTFlags.py_type(msgLabel), 0)

def AddMsgLabel(builder, msgLabel):
    UserChatHistoryOneSlotAddMsgLabel(builder, msgLabel)

def UserChatHistoryOneSlotAddLovePoint(builder, lovePoint):
    builder.PrependInt32Slot(4, lovePoint, 0)

def AddLovePoint(builder, lovePoint):
    UserChatHistoryOneSlotAddLovePoint(builder, lovePoint)

def UserChatHistoryOneSlotAddLeadScreenshot(builder, leadScreenshot):
    builder.PrependBoolSlot(5, leadScreenshot, 0)

def AddLeadScreenshot(builder, leadScreenshot):
    UserChatHistoryOneSlotAddLeadScreenshot(builder, leadScreenshot)

def UserChatHistoryOneSlotEnd(builder):
    return builder.EndObject()

def End(builder):
    return UserChatHistoryOneSlotEnd(builder)
