# automatically generated by the FlatBuffers compiler, do not modify

# namespace: Acpcc

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class UserItemSizeRecordOneSlotSetElement(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = UserItemSizeRecordOneSlotSetElement()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsUserItemSizeRecordOneSlotSetElement(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # UserItemSizeRecordOneSlotSetElement
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # UserItemSizeRecordOneSlotSetElement
    def ItemId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # UserItemSizeRecordOneSlotSetElement
    def SizeMax(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # UserItemSizeRecordOneSlotSetElement
    def SizeMin(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

def UserItemSizeRecordOneSlotSetElementStart(builder):
    builder.StartObject(3)

def Start(builder):
    UserItemSizeRecordOneSlotSetElementStart(builder)

def UserItemSizeRecordOneSlotSetElementAddItemId(builder, itemId):
    builder.PrependUint32Slot(0, itemId, 0)

def AddItemId(builder, itemId):
    UserItemSizeRecordOneSlotSetElementAddItemId(builder, itemId)

def UserItemSizeRecordOneSlotSetElementAddSizeMax(builder, sizeMax):
    builder.PrependInt32Slot(1, sizeMax, 0)

def AddSizeMax(builder, sizeMax):
    UserItemSizeRecordOneSlotSetElementAddSizeMax(builder, sizeMax)

def UserItemSizeRecordOneSlotSetElementAddSizeMin(builder, sizeMin):
    builder.PrependInt32Slot(2, sizeMin, 0)

def AddSizeMin(builder, sizeMin):
    UserItemSizeRecordOneSlotSetElementAddSizeMin(builder, sizeMin)

def UserItemSizeRecordOneSlotSetElementEnd(builder):
    return builder.EndObject()

def End(builder):
    return UserItemSizeRecordOneSlotSetElementEnd(builder)
