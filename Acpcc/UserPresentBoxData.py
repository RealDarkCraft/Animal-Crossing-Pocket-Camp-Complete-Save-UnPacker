# automatically generated by the FlatBuffers compiler, do not modify

# namespace: Acpcc

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class UserPresentBoxData(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = UserPresentBoxData()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsUserPresentBoxData(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # UserPresentBoxData
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # UserPresentBoxData
    def Id(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # UserPresentBoxData
    def ExpiredAt(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # UserPresentBoxData
    def InventoryDataId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # UserPresentBoxData
    def OpenedAt(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # UserPresentBoxData
    def Route(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # UserPresentBoxData
    def RouteOption(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # UserPresentBoxData
    def ItemLabel(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # UserPresentBoxData
    def ItemAmount(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(18))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # UserPresentBoxData
    def ItemOption(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(20))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

def UserPresentBoxDataStart(builder):
    builder.StartObject(9)

def Start(builder):
    UserPresentBoxDataStart(builder)

def UserPresentBoxDataAddId(builder, id):
    builder.PrependUint32Slot(0, id, 0)

def AddId(builder, id):
    UserPresentBoxDataAddId(builder, id)

def UserPresentBoxDataAddExpiredAt(builder, expiredAt):
    builder.PrependInt64Slot(1, expiredAt, 0)

def AddExpiredAt(builder, expiredAt):
    UserPresentBoxDataAddExpiredAt(builder, expiredAt)

def UserPresentBoxDataAddInventoryDataId(builder, inventoryDataId):
    builder.PrependUOffsetTRelativeSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(inventoryDataId), 0)

def AddInventoryDataId(builder, inventoryDataId):
    UserPresentBoxDataAddInventoryDataId(builder, inventoryDataId)

def UserPresentBoxDataAddOpenedAt(builder, openedAt):
    builder.PrependInt64Slot(3, openedAt, 0)

def AddOpenedAt(builder, openedAt):
    UserPresentBoxDataAddOpenedAt(builder, openedAt)

def UserPresentBoxDataAddRoute(builder, route):
    builder.PrependInt32Slot(4, route, 0)

def AddRoute(builder, route):
    UserPresentBoxDataAddRoute(builder, route)

def UserPresentBoxDataAddRouteOption(builder, routeOption):
    builder.PrependUOffsetTRelativeSlot(5, flatbuffers.number_types.UOffsetTFlags.py_type(routeOption), 0)

def AddRouteOption(builder, routeOption):
    UserPresentBoxDataAddRouteOption(builder, routeOption)

def UserPresentBoxDataAddItemLabel(builder, itemLabel):
    builder.PrependUOffsetTRelativeSlot(6, flatbuffers.number_types.UOffsetTFlags.py_type(itemLabel), 0)

def AddItemLabel(builder, itemLabel):
    UserPresentBoxDataAddItemLabel(builder, itemLabel)

def UserPresentBoxDataAddItemAmount(builder, itemAmount):
    builder.PrependInt32Slot(7, itemAmount, 0)

def AddItemAmount(builder, itemAmount):
    UserPresentBoxDataAddItemAmount(builder, itemAmount)

def UserPresentBoxDataAddItemOption(builder, itemOption):
    builder.PrependUOffsetTRelativeSlot(8, flatbuffers.number_types.UOffsetTFlags.py_type(itemOption), 0)

def AddItemOption(builder, itemOption):
    UserPresentBoxDataAddItemOption(builder, itemOption)

def UserPresentBoxDataEnd(builder):
    return builder.EndObject()

def End(builder):
    return UserPresentBoxDataEnd(builder)
