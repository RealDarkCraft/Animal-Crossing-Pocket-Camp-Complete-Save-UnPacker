# automatically generated by the FlatBuffers compiler, do not modify

# namespace: Acpcc

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class ExtAppealImageAlbumOneSlot(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = ExtAppealImageAlbumOneSlot()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsExtAppealImageAlbumOneSlot(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # ExtAppealImageAlbumOneSlot
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # ExtAppealImageAlbumOneSlot
    def Id(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # ExtAppealImageAlbumOneSlot
    def AddedDate(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # ExtAppealImageAlbumOneSlot
    def State(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint8Flags, o + self._tab.Pos)
        return 0

    # ExtAppealImageAlbumOneSlot
    def ProductType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint8Flags, o + self._tab.Pos)
        return 0

def ExtAppealImageAlbumOneSlotStart(builder):
    builder.StartObject(4)

def Start(builder):
    ExtAppealImageAlbumOneSlotStart(builder)

def ExtAppealImageAlbumOneSlotAddId(builder, id):
    builder.PrependUint32Slot(0, id, 0)

def AddId(builder, id):
    ExtAppealImageAlbumOneSlotAddId(builder, id)

def ExtAppealImageAlbumOneSlotAddAddedDate(builder, addedDate):
    builder.PrependInt64Slot(1, addedDate, 0)

def AddAddedDate(builder, addedDate):
    ExtAppealImageAlbumOneSlotAddAddedDate(builder, addedDate)

def ExtAppealImageAlbumOneSlotAddState(builder, state):
    builder.PrependUint8Slot(2, state, 0)

def AddState(builder, state):
    ExtAppealImageAlbumOneSlotAddState(builder, state)

def ExtAppealImageAlbumOneSlotAddProductType(builder, productType):
    builder.PrependUint8Slot(3, productType, 0)

def AddProductType(builder, productType):
    ExtAppealImageAlbumOneSlotAddProductType(builder, productType)

def ExtAppealImageAlbumOneSlotEnd(builder):
    return builder.EndObject()

def End(builder):
    return ExtAppealImageAlbumOneSlotEnd(builder)
