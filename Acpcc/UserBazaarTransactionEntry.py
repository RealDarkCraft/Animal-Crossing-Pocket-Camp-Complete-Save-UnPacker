# automatically generated by the FlatBuffers compiler, do not modify

# namespace: Acpcc

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class UserBazaarTransactionEntry(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = UserBazaarTransactionEntry()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsUserBazaarTransactionEntry(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # UserBazaarTransactionEntry
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # UserBazaarTransactionEntry
    def Id(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # UserBazaarTransactionEntry
    def TransactionId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # UserBazaarTransactionEntry
    def SellerPlayerId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # UserBazaarTransactionEntry
    def BuyerPlayerId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # UserBazaarTransactionEntry
    def Status(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # UserBazaarTransactionEntry
    def CreatedAt(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # UserBazaarTransactionEntry
    def UpdatedAt(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # UserBazaarTransactionEntry
    def ItemLabel(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(18))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # UserBazaarTransactionEntry
    def PriceBell(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(20))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # UserBazaarTransactionEntry
    def Amount(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(22))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # UserBazaarTransactionEntry
    def TrayNumber(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(24))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

def UserBazaarTransactionEntryStart(builder):
    builder.StartObject(11)

def Start(builder):
    UserBazaarTransactionEntryStart(builder)

def UserBazaarTransactionEntryAddId(builder, id):
    builder.PrependUint32Slot(0, id, 0)

def AddId(builder, id):
    UserBazaarTransactionEntryAddId(builder, id)

def UserBazaarTransactionEntryAddTransactionId(builder, transactionId):
    builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(transactionId), 0)

def AddTransactionId(builder, transactionId):
    UserBazaarTransactionEntryAddTransactionId(builder, transactionId)

def UserBazaarTransactionEntryAddSellerPlayerId(builder, sellerPlayerId):
    builder.PrependUOffsetTRelativeSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(sellerPlayerId), 0)

def AddSellerPlayerId(builder, sellerPlayerId):
    UserBazaarTransactionEntryAddSellerPlayerId(builder, sellerPlayerId)

def UserBazaarTransactionEntryAddBuyerPlayerId(builder, buyerPlayerId):
    builder.PrependUOffsetTRelativeSlot(3, flatbuffers.number_types.UOffsetTFlags.py_type(buyerPlayerId), 0)

def AddBuyerPlayerId(builder, buyerPlayerId):
    UserBazaarTransactionEntryAddBuyerPlayerId(builder, buyerPlayerId)

def UserBazaarTransactionEntryAddStatus(builder, status):
    builder.PrependInt32Slot(4, status, 0)

def AddStatus(builder, status):
    UserBazaarTransactionEntryAddStatus(builder, status)

def UserBazaarTransactionEntryAddCreatedAt(builder, createdAt):
    builder.PrependInt64Slot(5, createdAt, 0)

def AddCreatedAt(builder, createdAt):
    UserBazaarTransactionEntryAddCreatedAt(builder, createdAt)

def UserBazaarTransactionEntryAddUpdatedAt(builder, updatedAt):
    builder.PrependInt64Slot(6, updatedAt, 0)

def AddUpdatedAt(builder, updatedAt):
    UserBazaarTransactionEntryAddUpdatedAt(builder, updatedAt)

def UserBazaarTransactionEntryAddItemLabel(builder, itemLabel):
    builder.PrependUOffsetTRelativeSlot(7, flatbuffers.number_types.UOffsetTFlags.py_type(itemLabel), 0)

def AddItemLabel(builder, itemLabel):
    UserBazaarTransactionEntryAddItemLabel(builder, itemLabel)

def UserBazaarTransactionEntryAddPriceBell(builder, priceBell):
    builder.PrependInt32Slot(8, priceBell, 0)

def AddPriceBell(builder, priceBell):
    UserBazaarTransactionEntryAddPriceBell(builder, priceBell)

def UserBazaarTransactionEntryAddAmount(builder, amount):
    builder.PrependInt32Slot(9, amount, 0)

def AddAmount(builder, amount):
    UserBazaarTransactionEntryAddAmount(builder, amount)

def UserBazaarTransactionEntryAddTrayNumber(builder, trayNumber):
    builder.PrependInt32Slot(10, trayNumber, 0)

def AddTrayNumber(builder, trayNumber):
    UserBazaarTransactionEntryAddTrayNumber(builder, trayNumber)

def UserBazaarTransactionEntryEnd(builder):
    return builder.EndObject()

def End(builder):
    return UserBazaarTransactionEntryEnd(builder)
