# automatically generated by the FlatBuffers compiler, do not modify

# namespace: Acpcc

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class UserDiaryExteriorOneSlot(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = UserDiaryExteriorOneSlot()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsUserDiaryExteriorOneSlot(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # UserDiaryExteriorOneSlot
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # UserDiaryExteriorOneSlot
    def Id(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # UserDiaryExteriorOneSlot
    def ExteriorId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # UserDiaryExteriorOneSlot
    def Have(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

def UserDiaryExteriorOneSlotStart(builder):
    builder.StartObject(3)

def Start(builder):
    UserDiaryExteriorOneSlotStart(builder)

def UserDiaryExteriorOneSlotAddId(builder, id):
    builder.PrependUint32Slot(0, id, 0)

def AddId(builder, id):
    UserDiaryExteriorOneSlotAddId(builder, id)

def UserDiaryExteriorOneSlotAddExteriorId(builder, exteriorId):
    builder.PrependUint32Slot(1, exteriorId, 0)

def AddExteriorId(builder, exteriorId):
    UserDiaryExteriorOneSlotAddExteriorId(builder, exteriorId)

def UserDiaryExteriorOneSlotAddHave(builder, have):
    builder.PrependBoolSlot(2, have, 0)

def AddHave(builder, have):
    UserDiaryExteriorOneSlotAddHave(builder, have)

def UserDiaryExteriorOneSlotEnd(builder):
    return builder.EndObject()

def End(builder):
    return UserDiaryExteriorOneSlotEnd(builder)
