# automatically generated by the FlatBuffers compiler, do not modify

# namespace: Acpcc

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class UserMySetLayoutFurnitureOneSlotSetElement(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = UserMySetLayoutFurnitureOneSlotSetElement()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsUserMySetLayoutFurnitureOneSlotSetElement(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # UserMySetLayoutFurnitureOneSlotSetElement
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # UserMySetLayoutFurnitureOneSlotSetElement
    def MySetId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # UserMySetLayoutFurnitureOneSlotSetElement
    def Type(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # UserMySetLayoutFurnitureOneSlotSetElement
    def ItemId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # UserMySetLayoutFurnitureOneSlotSetElement
    def PosX(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float32Flags, o + self._tab.Pos)
        return 0.0

    # UserMySetLayoutFurnitureOneSlotSetElement
    def PosY(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float32Flags, o + self._tab.Pos)
        return 0.0

    # UserMySetLayoutFurnitureOneSlotSetElement
    def PosZ(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float32Flags, o + self._tab.Pos)
        return 0.0

    # UserMySetLayoutFurnitureOneSlotSetElement
    def RotY(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float32Flags, o + self._tab.Pos)
        return 0.0

    # UserMySetLayoutFurnitureOneSlotSetElement
    def Switch(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(18))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # UserMySetLayoutFurnitureOneSlotSetElement
    def Guid(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(20))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # UserMySetLayoutFurnitureOneSlotSetElement
    def MyDesignId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(22))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

def UserMySetLayoutFurnitureOneSlotSetElementStart(builder):
    builder.StartObject(10)

def Start(builder):
    UserMySetLayoutFurnitureOneSlotSetElementStart(builder)

def UserMySetLayoutFurnitureOneSlotSetElementAddMySetId(builder, mySetId):
    builder.PrependInt32Slot(0, mySetId, 0)

def AddMySetId(builder, mySetId):
    UserMySetLayoutFurnitureOneSlotSetElementAddMySetId(builder, mySetId)

def UserMySetLayoutFurnitureOneSlotSetElementAddType(builder, type):
    builder.PrependUint32Slot(1, type, 0)

def AddType(builder, type):
    UserMySetLayoutFurnitureOneSlotSetElementAddType(builder, type)

def UserMySetLayoutFurnitureOneSlotSetElementAddItemId(builder, itemId):
    builder.PrependUint32Slot(2, itemId, 0)

def AddItemId(builder, itemId):
    UserMySetLayoutFurnitureOneSlotSetElementAddItemId(builder, itemId)

def UserMySetLayoutFurnitureOneSlotSetElementAddPosX(builder, posX):
    builder.PrependFloat32Slot(3, posX, 0.0)

def AddPosX(builder, posX):
    UserMySetLayoutFurnitureOneSlotSetElementAddPosX(builder, posX)

def UserMySetLayoutFurnitureOneSlotSetElementAddPosY(builder, posY):
    builder.PrependFloat32Slot(4, posY, 0.0)

def AddPosY(builder, posY):
    UserMySetLayoutFurnitureOneSlotSetElementAddPosY(builder, posY)

def UserMySetLayoutFurnitureOneSlotSetElementAddPosZ(builder, posZ):
    builder.PrependFloat32Slot(5, posZ, 0.0)

def AddPosZ(builder, posZ):
    UserMySetLayoutFurnitureOneSlotSetElementAddPosZ(builder, posZ)

def UserMySetLayoutFurnitureOneSlotSetElementAddRotY(builder, rotY):
    builder.PrependFloat32Slot(6, rotY, 0.0)

def AddRotY(builder, rotY):
    UserMySetLayoutFurnitureOneSlotSetElementAddRotY(builder, rotY)

def UserMySetLayoutFurnitureOneSlotSetElementAddSwitch(builder, switch):
    builder.PrependBoolSlot(7, switch, 0)

def AddSwitch(builder, switch):
    UserMySetLayoutFurnitureOneSlotSetElementAddSwitch(builder, switch)

def UserMySetLayoutFurnitureOneSlotSetElementAddGuid(builder, guid):
    builder.PrependInt64Slot(8, guid, 0)

def AddGuid(builder, guid):
    UserMySetLayoutFurnitureOneSlotSetElementAddGuid(builder, guid)

def UserMySetLayoutFurnitureOneSlotSetElementAddMyDesignId(builder, myDesignId):
    builder.PrependUOffsetTRelativeSlot(9, flatbuffers.number_types.UOffsetTFlags.py_type(myDesignId), 0)

def AddMyDesignId(builder, myDesignId):
    UserMySetLayoutFurnitureOneSlotSetElementAddMyDesignId(builder, myDesignId)

def UserMySetLayoutFurnitureOneSlotSetElementEnd(builder):
    return builder.EndObject()

def End(builder):
    return UserMySetLayoutFurnitureOneSlotSetElementEnd(builder)
