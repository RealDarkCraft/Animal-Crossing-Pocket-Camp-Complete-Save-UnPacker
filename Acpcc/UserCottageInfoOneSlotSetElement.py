# automatically generated by the FlatBuffers compiler, do not modify

# namespace: Acpcc

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class UserCottageInfoOneSlotSetElement(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = UserCottageInfoOneSlotSetElement()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsUserCottageInfoOneSlotSetElement(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # UserCottageInfoOneSlotSetElement
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # UserCottageInfoOneSlotSetElement
    def CottageId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # UserCottageInfoOneSlotSetElement
    def CottageSizeId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # UserCottageInfoOneSlotSetElement
    def CottageFloorId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # UserCottageInfoOneSlotSetElement
    def CottageLightFlag(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # UserCottageInfoOneSlotSetElement
    def CottageWindowFlag(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

def UserCottageInfoOneSlotSetElementStart(builder):
    builder.StartObject(5)

def Start(builder):
    UserCottageInfoOneSlotSetElementStart(builder)

def UserCottageInfoOneSlotSetElementAddCottageId(builder, cottageId):
    builder.PrependInt32Slot(0, cottageId, 0)

def AddCottageId(builder, cottageId):
    UserCottageInfoOneSlotSetElementAddCottageId(builder, cottageId)

def UserCottageInfoOneSlotSetElementAddCottageSizeId(builder, cottageSizeId):
    builder.PrependInt32Slot(1, cottageSizeId, 0)

def AddCottageSizeId(builder, cottageSizeId):
    UserCottageInfoOneSlotSetElementAddCottageSizeId(builder, cottageSizeId)

def UserCottageInfoOneSlotSetElementAddCottageFloorId(builder, cottageFloorId):
    builder.PrependInt32Slot(2, cottageFloorId, 0)

def AddCottageFloorId(builder, cottageFloorId):
    UserCottageInfoOneSlotSetElementAddCottageFloorId(builder, cottageFloorId)

def UserCottageInfoOneSlotSetElementAddCottageLightFlag(builder, cottageLightFlag):
    builder.PrependBoolSlot(3, cottageLightFlag, 0)

def AddCottageLightFlag(builder, cottageLightFlag):
    UserCottageInfoOneSlotSetElementAddCottageLightFlag(builder, cottageLightFlag)

def UserCottageInfoOneSlotSetElementAddCottageWindowFlag(builder, cottageWindowFlag):
    builder.PrependBoolSlot(4, cottageWindowFlag, 0)

def AddCottageWindowFlag(builder, cottageWindowFlag):
    UserCottageInfoOneSlotSetElementAddCottageWindowFlag(builder, cottageWindowFlag)

def UserCottageInfoOneSlotSetElementEnd(builder):
    return builder.EndObject()

def End(builder):
    return UserCottageInfoOneSlotSetElementEnd(builder)
