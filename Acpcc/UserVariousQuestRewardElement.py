# automatically generated by the FlatBuffers compiler, do not modify

# namespace: Acpcc

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class UserVariousQuestRewardElement(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = UserVariousQuestRewardElement()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsUserVariousQuestRewardElement(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # UserVariousQuestRewardElement
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # UserVariousQuestRewardElement
    def RewardItemLabel(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # UserVariousQuestRewardElement
    def RewardItemAmount(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # UserVariousQuestRewardElement
    def ExplicitFlg(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # UserVariousQuestRewardElement
    def CampaignId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

def UserVariousQuestRewardElementStart(builder):
    builder.StartObject(4)

def Start(builder):
    UserVariousQuestRewardElementStart(builder)

def UserVariousQuestRewardElementAddRewardItemLabel(builder, rewardItemLabel):
    builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(rewardItemLabel), 0)

def AddRewardItemLabel(builder, rewardItemLabel):
    UserVariousQuestRewardElementAddRewardItemLabel(builder, rewardItemLabel)

def UserVariousQuestRewardElementAddRewardItemAmount(builder, rewardItemAmount):
    builder.PrependInt32Slot(1, rewardItemAmount, 0)

def AddRewardItemAmount(builder, rewardItemAmount):
    UserVariousQuestRewardElementAddRewardItemAmount(builder, rewardItemAmount)

def UserVariousQuestRewardElementAddExplicitFlg(builder, explicitFlg):
    builder.PrependBoolSlot(2, explicitFlg, 0)

def AddExplicitFlg(builder, explicitFlg):
    UserVariousQuestRewardElementAddExplicitFlg(builder, explicitFlg)

def UserVariousQuestRewardElementAddCampaignId(builder, campaignId):
    builder.PrependUint32Slot(3, campaignId, 0)

def AddCampaignId(builder, campaignId):
    UserVariousQuestRewardElementAddCampaignId(builder, campaignId)

def UserVariousQuestRewardElementEnd(builder):
    return builder.EndObject()

def End(builder):
    return UserVariousQuestRewardElementEnd(builder)
