# automatically generated by the FlatBuffers compiler, do not modify

# namespace: Acpcc

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class UserTapEventRefreshTime(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = UserTapEventRefreshTime()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsUserTapEventRefreshTime(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # UserTapEventRefreshTime
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # UserTapEventRefreshTime
    def Id(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # UserTapEventRefreshTime
    def ActionRefreshTime(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # UserTapEventRefreshTime
    def ConversationRefreshTime(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # UserTapEventRefreshTime
    def QuestRefreshTime(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

def UserTapEventRefreshTimeStart(builder):
    builder.StartObject(4)

def Start(builder):
    UserTapEventRefreshTimeStart(builder)

def UserTapEventRefreshTimeAddId(builder, id):
    builder.PrependUint32Slot(0, id, 0)

def AddId(builder, id):
    UserTapEventRefreshTimeAddId(builder, id)

def UserTapEventRefreshTimeAddActionRefreshTime(builder, actionRefreshTime):
    builder.PrependInt64Slot(1, actionRefreshTime, 0)

def AddActionRefreshTime(builder, actionRefreshTime):
    UserTapEventRefreshTimeAddActionRefreshTime(builder, actionRefreshTime)

def UserTapEventRefreshTimeAddConversationRefreshTime(builder, conversationRefreshTime):
    builder.PrependInt64Slot(2, conversationRefreshTime, 0)

def AddConversationRefreshTime(builder, conversationRefreshTime):
    UserTapEventRefreshTimeAddConversationRefreshTime(builder, conversationRefreshTime)

def UserTapEventRefreshTimeAddQuestRefreshTime(builder, questRefreshTime):
    builder.PrependInt64Slot(3, questRefreshTime, 0)

def AddQuestRefreshTime(builder, questRefreshTime):
    UserTapEventRefreshTimeAddQuestRefreshTime(builder, questRefreshTime)

def UserTapEventRefreshTimeEnd(builder):
    return builder.EndObject()

def End(builder):
    return UserTapEventRefreshTimeEnd(builder)
