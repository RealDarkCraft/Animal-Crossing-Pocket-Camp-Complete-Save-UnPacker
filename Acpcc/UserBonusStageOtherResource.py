# automatically generated by the FlatBuffers compiler, do not modify

# namespace: Acpcc

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class UserBonusStageOtherResource(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = UserBonusStageOtherResource()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsUserBonusStageOtherResource(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # UserBonusStageOtherResource
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # UserBonusStageOtherResource
    def Id(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # UserBonusStageOtherResource
    def ResourceId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # UserBonusStageOtherResource
    def RewardNotEntered(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # UserBonusStageOtherResource
    def RewardEntered(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # UserBonusStageOtherResource
    def RewardItemId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

def UserBonusStageOtherResourceStart(builder):
    builder.StartObject(5)

def Start(builder):
    UserBonusStageOtherResourceStart(builder)

def UserBonusStageOtherResourceAddId(builder, id):
    builder.PrependUint32Slot(0, id, 0)

def AddId(builder, id):
    UserBonusStageOtherResourceAddId(builder, id)

def UserBonusStageOtherResourceAddResourceId(builder, resourceId):
    builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(resourceId), 0)

def AddResourceId(builder, resourceId):
    UserBonusStageOtherResourceAddResourceId(builder, resourceId)

def UserBonusStageOtherResourceAddRewardNotEntered(builder, rewardNotEntered):
    builder.PrependInt32Slot(2, rewardNotEntered, 0)

def AddRewardNotEntered(builder, rewardNotEntered):
    UserBonusStageOtherResourceAddRewardNotEntered(builder, rewardNotEntered)

def UserBonusStageOtherResourceAddRewardEntered(builder, rewardEntered):
    builder.PrependInt32Slot(3, rewardEntered, 0)

def AddRewardEntered(builder, rewardEntered):
    UserBonusStageOtherResourceAddRewardEntered(builder, rewardEntered)

def UserBonusStageOtherResourceAddRewardItemId(builder, rewardItemId):
    builder.PrependUint32Slot(4, rewardItemId, 0)

def AddRewardItemId(builder, rewardItemId):
    UserBonusStageOtherResourceAddRewardItemId(builder, rewardItemId)

def UserBonusStageOtherResourceEnd(builder):
    return builder.EndObject()

def End(builder):
    return UserBonusStageOtherResourceEnd(builder)
