# automatically generated by the FlatBuffers compiler, do not modify

# namespace: Acpcc

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class UserStorehouse(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = UserStorehouse()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsUserStorehouse(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # UserStorehouse
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # UserStorehouse
    def Id(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # UserStorehouse
    def ItemId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # UserStorehouse
    def Quantity(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # UserStorehouse
    def StorehouseId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

def UserStorehouseStart(builder):
    builder.StartObject(4)

def Start(builder):
    UserStorehouseStart(builder)

def UserStorehouseAddId(builder, id):
    builder.PrependUint32Slot(0, id, 0)

def AddId(builder, id):
    UserStorehouseAddId(builder, id)

def UserStorehouseAddItemId(builder, itemId):
    builder.PrependUint32Slot(1, itemId, 0)

def AddItemId(builder, itemId):
    UserStorehouseAddItemId(builder, itemId)

def UserStorehouseAddQuantity(builder, quantity):
    builder.PrependInt32Slot(2, quantity, 0)

def AddQuantity(builder, quantity):
    UserStorehouseAddQuantity(builder, quantity)

def UserStorehouseAddStorehouseId(builder, storehouseId):
    builder.PrependInt32Slot(3, storehouseId, 0)

def AddStorehouseId(builder, storehouseId):
    UserStorehouseAddStorehouseId(builder, storehouseId)

def UserStorehouseEnd(builder):
    return builder.EndObject()

def End(builder):
    return UserStorehouseEnd(builder)
