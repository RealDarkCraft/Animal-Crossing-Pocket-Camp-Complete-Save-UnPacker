# automatically generated by the FlatBuffers compiler, do not modify

# namespace: Acpcc

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class UserFriendListCacheEntry(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = UserFriendListCacheEntry()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsUserFriendListCacheEntry(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # UserFriendListCacheEntry
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # UserFriendListCacheEntry
    def Id(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # UserFriendListCacheEntry
    def PlayerId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # UserFriendListCacheEntry
    def CreatedAt(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # UserFriendListCacheEntry
    def Type(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # UserFriendListCacheEntry
    def Remaind(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # UserFriendListCacheEntry
    def LookAppealUrl(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

def UserFriendListCacheEntryStart(builder):
    builder.StartObject(6)

def Start(builder):
    UserFriendListCacheEntryStart(builder)

def UserFriendListCacheEntryAddId(builder, id):
    builder.PrependUint32Slot(0, id, 0)

def AddId(builder, id):
    UserFriendListCacheEntryAddId(builder, id)

def UserFriendListCacheEntryAddPlayerId(builder, playerId):
    builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(playerId), 0)

def AddPlayerId(builder, playerId):
    UserFriendListCacheEntryAddPlayerId(builder, playerId)

def UserFriendListCacheEntryAddCreatedAt(builder, createdAt):
    builder.PrependInt64Slot(2, createdAt, 0)

def AddCreatedAt(builder, createdAt):
    UserFriendListCacheEntryAddCreatedAt(builder, createdAt)

def UserFriendListCacheEntryAddType(builder, type):
    builder.PrependInt32Slot(3, type, 0)

def AddType(builder, type):
    UserFriendListCacheEntryAddType(builder, type)

def UserFriendListCacheEntryAddRemaind(builder, remaind):
    builder.PrependInt32Slot(4, remaind, 0)

def AddRemaind(builder, remaind):
    UserFriendListCacheEntryAddRemaind(builder, remaind)

def UserFriendListCacheEntryAddLookAppealUrl(builder, lookAppealUrl):
    builder.PrependUOffsetTRelativeSlot(5, flatbuffers.number_types.UOffsetTFlags.py_type(lookAppealUrl), 0)

def AddLookAppealUrl(builder, lookAppealUrl):
    UserFriendListCacheEntryAddLookAppealUrl(builder, lookAppealUrl)

def UserFriendListCacheEntryEnd(builder):
    return builder.EndObject()

def End(builder):
    return UserFriendListCacheEntryEnd(builder)
